07/19/2023 14:46:28 PM - INFO - exec: setting.json: {'DATA_DIR': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\dst', 'DEBUG': False, 'Django_IP': '172.28.146.46', 'Django_PORT': 8013, 'KAFKA_BROKER': '172.28.146.46:9093', 'LOGGING': {'version': 1, 'disable_existing_loggers': False, 'formatters': {'infoFormat': {'format': '%(asctime)s - %(levelname)s - %(module)s: %(message)s', 'datefmt': '%m/%d/%Y %H:%M:%S %p'}, 'errorFormat': {'format': '%(asctime)s - %(levelname)s - %(module)s - %(funcName)s - %(lineno)d: %(message)s'}}, 'handlers': {'console': {'level': 'DEBUG', 'class': 'logging.StreamHandler', 'formatter': 'infoFormat'}, 'info': {'level': 'INFO', 'class': 'logging.handlers.RotatingFileHandler', 'formatter': 'infoFormat', 'mode': 'a', 'filename': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\dst\\logs\\info.log', 'maxBytes': 10485760, 'backupCount': 5, 'encoding': 'utf8'}, 'error': {'level': 'ERROR', 'class': 'logging.handlers.RotatingFileHandler', 'formatter': 'errorFormat', 'mode': 'a', 'filename': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\dst\\logs\\error.log', 'maxBytes': 10485760, 'backupCount': 5, 'encoding': 'utf8'}}, 'loggers': {'debug': {'level': 'DEBUG', 'handlers': ['console'], 'propagate': False}, 'gmqtt': {'level': 'ERROR'}}, 'root': {'level': 'INFO', 'handlers': ['console', 'info', 'error']}}, 'QUERY_REQUEST_TIMEOUT': 5, 'SETTING_DIR': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\dst\\setting', 'STATION_INFO_DIR': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\dst\\station_info.json', 'TEMPLATE_FILE_DIR': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\templates', 'TMP_DIR': 'C:\\Users\\adc\\Desktop\\Mine\\WarningSystem\\app\\tmp', 'UI_IP': '172.28.146.46', 'UI_PORT': 8081, 'UPLOAD_REQUEST_TIMEOUT': 5, 'VERSION': '1.0', 'WARNING_PORT': 8077}
07/19/2023 14:46:28 PM - INFO - exec: WarningSystem default port in setting.json: 8077
07/19/2023 14:46:30 PM - INFO - base: Adding job tentatively -- it will be properly scheduled when the scheduler starts
07/19/2023 14:46:30 PM - INFO - base: Adding job tentatively -- it will be properly scheduled when the scheduler starts
07/19/2023 14:46:30 PM - INFO - main: init to check connection with django and ui
07/19/2023 14:46:33 PM - INFO - main: Can't connect to Django: 172.28.146.46:8013 with ip: 172.24.192.1
07/19/2023 14:46:36 PM - INFO - main: Can't connect to Django: 172.28.146.46:8013 with ip: 10.0.75.1
07/19/2023 14:46:36 PM - INFO - main: Connect to Django: 172.28.146.46:8013 with ip: 10.195.149.15
07/19/2023 14:46:36 PM - INFO - main: Connect to UI: 172.28.146.46:8081 with ip: 10.195.149.15
07/19/2023 14:46:36 PM - INFO - base: Added job "add_scheduler_task.<locals>.check_mqtt_connection_schedule" to job store "default"
07/19/2023 14:46:36 PM - INFO - base: Added job "add_scheduler_task.<locals>.check_network_connection_schedule" to job store "default"
07/19/2023 14:46:36 PM - INFO - base: Scheduler started
07/19/2023 14:46:36 PM - INFO - fast_mqtt: Connected to MQTT Broker
07/19/2023 14:46:36 PM - INFO - fast_mqtt: query warning config after connection
07/19/2023 14:46:36 PM - INFO - fast_mqtt: the latest warning config is: {'product': 'Test', 'project': 'YOKOHAMA', 'factory': 'F03', 'floor': '3FTC', 'line': '03', 'cell_type': 'CSC', 'cell_id': 12, 'cell_name': 'CSC:12', 'mac_address': 'a4:34:d9:80:7e:2e', 'ip': '192.168.137.10', 'adc_daemon_port': 8081, 'create_time': '2023-05-16T13:38:48.327000', 'update_time': '2023-05-16T13:38:48.327000', 'creator': ['martin_cho@pegatroncorp.com'], 'inform_list': ['martin_cho@pegatroncorp.com'], 'rules': [{'condition': [{'compare_method': 'lte', 'threshold': 100}, {'compare_method': 'gt', 'threshold': 80}], 'warning_condition': 'and', 'monitor_key': ['value', 'pulse'], 'topic': '/Devices/inside_transfer_2/PWM', 'rule_name': 'test02', 'silence_interval': 1}, {'condition': [{'compare_method': 'eq', 'threshold': 0}], 'warning_condition': 'or', 'monitor_key': ['value', 'pulse'], 'topic': '/Devices/inside_transfer_2/PWM', 'rule_name': 'test02', 'silence_interval': 1}, {'condition': [{'compare_method': 'gte', 'threshold': 4, 'template': [0.5, 0.5, 0.5], 'compute_method': 'sum'}, {'compare_method': 'eq', 'threshold': 0}], 'warning_condition': 'and', 'monitor_key': ['value'], 'data_type': 'array', 'topic': '/Devices/work_station_1/Digital', 'rule_name': 'test01', 'silence_interval': 1}], 'subscribed': [], 'connection': True}
07/19/2023 14:46:36 PM - INFO - fast_mqtt: Subscribed to topic: /Devices/inside_transfer_2/PWM
07/19/2023 14:46:36 PM - INFO - fast_mqtt: Subscribed to topic: /Devices/work_station_1/Digital
07/19/2023 14:46:45 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:00 CST)" (scheduled at 2023-07-19 14:46:45.198833+08:00)
07/19/2023 14:46:45 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:00 CST)" executed successfully
07/19/2023 14:46:50 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:47:10 CST)" (scheduled at 2023-07-19 14:46:50.200818+08:00)
07/19/2023 14:46:50 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:47:10 CST)" executed successfully
07/19/2023 14:47:00 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:15 CST)" (scheduled at 2023-07-19 14:47:00.198833+08:00)
07/19/2023 14:47:00 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:15 CST)" executed successfully
07/19/2023 14:47:10 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:47:30 CST)" (scheduled at 2023-07-19 14:47:10.200818+08:00)
07/19/2023 14:47:10 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:47:30 CST)" executed successfully
07/19/2023 14:47:15 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:30 CST)" (scheduled at 2023-07-19 14:47:15.198833+08:00)
07/19/2023 14:47:15 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:30 CST)" executed successfully
07/19/2023 14:47:30 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:45 CST)" (scheduled at 2023-07-19 14:47:30.198833+08:00)
07/19/2023 14:47:30 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:47:45 CST)" executed successfully
07/19/2023 14:47:30 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:47:50 CST)" (scheduled at 2023-07-19 14:47:30.200818+08:00)
07/19/2023 14:47:30 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:47:50 CST)" executed successfully
07/19/2023 14:47:45 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:00 CST)" (scheduled at 2023-07-19 14:47:45.198833+08:00)
07/19/2023 14:47:45 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:00 CST)" executed successfully
07/19/2023 14:47:50 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:48:10 CST)" (scheduled at 2023-07-19 14:47:50.200818+08:00)
07/19/2023 14:47:50 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:48:10 CST)" executed successfully
07/19/2023 14:48:00 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:15 CST)" (scheduled at 2023-07-19 14:48:00.198833+08:00)
07/19/2023 14:48:00 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:15 CST)" executed successfully
07/19/2023 14:48:10 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:48:30 CST)" (scheduled at 2023-07-19 14:48:10.200818+08:00)
07/19/2023 14:48:10 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:48:30 CST)" executed successfully
07/19/2023 14:48:15 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:30 CST)" (scheduled at 2023-07-19 14:48:15.198833+08:00)
07/19/2023 14:48:15 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:30 CST)" executed successfully
07/19/2023 14:48:30 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:45 CST)" (scheduled at 2023-07-19 14:48:30.198833+08:00)
07/19/2023 14:48:30 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:48:45 CST)" executed successfully
07/19/2023 14:48:30 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:48:50 CST)" (scheduled at 2023-07-19 14:48:30.200818+08:00)
07/19/2023 14:48:30 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:48:50 CST)" executed successfully
07/19/2023 14:48:45 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:49:00 CST)" (scheduled at 2023-07-19 14:48:45.198833+08:00)
07/19/2023 14:48:45 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:49:00 CST)" executed successfully
07/19/2023 14:48:50 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:49:10 CST)" (scheduled at 2023-07-19 14:48:50.200818+08:00)
07/19/2023 14:48:50 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:49:10 CST)" executed successfully
07/19/2023 14:49:00 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:49:15 CST)" (scheduled at 2023-07-19 14:49:00.198833+08:00)
07/19/2023 14:49:00 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:49:15 CST)" executed successfully
07/19/2023 14:49:03 PM - INFO - request: [response status code]: 201
07/19/2023 14:49:03 PM - INFO - request: [response text]: {"product":"Test","project":"YOKOHAMA","factory":"F03","floor":"3FTC","line":"03","cell_type":"CSC","cell_id":12,"cell_name":"CSC:12","mac_address":"a4:34:d9:80:7e:2e","ip":"192.168.137.10","adc_daemon_port":8081,"create_time":"2023-05-16T13:38:48.327000","update_time":"2023-05-16T13:38:48.327000","creator":["martin_cho@pegatroncorp.com"],"inform_list":["martin_cho@pegatroncorp.com"],"topic":"/Devices/inside_transfer_2/PWM","rule_name":"test02","silence_interval":1,"records":1,"warning_time":"2023-07-19T14:49:03.021712","rawdata":[0],"rule":{"condition":[{"compare_method":"eq","threshold":0}],"warning_condition":"or","monitor_key":["value","pulse"]}}
07/19/2023 14:49:10 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:49:30 CST)" (scheduled at 2023-07-19 14:49:10.200818+08:00)
07/19/2023 14:49:10 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_network_connection_schedule (trigger: interval[0:00:20], next run at: 2023-07-19 14:49:30 CST)" executed successfully
07/19/2023 14:49:13 PM - INFO - request: [response status code]: 201
07/19/2023 14:49:13 PM - INFO - request: [response text]: {"product":"Test","project":"YOKOHAMA","factory":"F03","floor":"3FTC","line":"03","cell_type":"CSC","cell_id":12,"cell_name":"CSC:12","mac_address":"a4:34:d9:80:7e:2e","ip":"192.168.137.10","adc_daemon_port":8081,"create_time":"2023-05-16T13:38:48.327000","update_time":"2023-05-16T13:38:48.327000","creator":["martin_cho@pegatroncorp.com"],"inform_list":["martin_cho@pegatroncorp.com"],"topic":"/Devices/work_station_1/Digital","rule_name":"test01","silence_interval":1,"records":1,"warning_time":"2023-07-19T14:49:13.549100","rawdata":[[0,1,0,1,0,0,1,0,1,5]],"rule":{"condition":[{"compare_method":"gte","threshold":4,"template":[0.5,0.5,0.5],"compute_method":"sum"},{"compare_method":"eq","threshold":0}],"warning_condition":"and","monitor_key":["value"]}}
07/19/2023 14:49:15 PM - INFO - base_py3: Running job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:49:30 CST)" (scheduled at 2023-07-19 14:49:15.198833+08:00)
07/19/2023 14:49:15 PM - INFO - base_py3: Job "add_scheduler_task.<locals>.check_mqtt_connection_schedule (trigger: interval[0:00:15], next run at: 2023-07-19 14:49:30 CST)" executed successfully
07/19/2023 14:49:23 PM - INFO - base: Scheduler has been shut down
07/19/2023 14:49:23 PM - INFO - fast_mqtt: Disconnected to MQTT Broker
